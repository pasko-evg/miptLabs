# В некотором физическом эксперименте показания прибора снимались с частотой 5 измерений в секунду.
# Эксперимент проводился в течение довольно большого времени, и в результате накопилось очень много данных.
# Ученых, которые проводили данный эксперимент, очень интересует, какое максимальное значение
# измеряемой величины достигалось во время измерения. Но вот беда: на остановку установки
# также требуется секунда времени, и в течение этого времени с установки могут приходить
# совершенно любые значения величины. В связи с этим, показания последних 5 измерений
# учитывать при поиске максимального значения не следует.

# Вам необходимо написать программу, которая в данном потоке чисел заранее неизвестной
# длины находит максимальное значение, отбрасывая при этом последние 5 измерений.

# Формат входных данных

# На вход вашей программе передается последовательность натуральных чисел результаты измерений.
# Каждое новое число передается с новой строки. Гарантируется, что длина входной последовательности
# не меньше 6 и не превосходит 10^9 . На конце последовательности передается число 0.

# Формат выходных данных

# Программа должна вывести на экран одно число максимальное значение входной последовательности за исключением последних 5 элементов.

# in: 1 2 3 4 5 6 0
# out: 1

# in: 1 5 2 15 373 232 43 21 5433 5312 0 
# out: 373


debug = False
TESTS = [([1, 2, 3, 4, 5, 6], 1),
         ([5, 2, 15, 373, 232, 43, 21, 5433, 5312], 373)]

class BigSequence(object):
    def __init__(self):
        self.max_element = 0
        self.last_six_element = []
    
    def add_element(self, element: int):
        if len(self.last_six_element) == 5:
            if self.last_six_element[0] > self.max_element:
                self.max_element = self.last_six_element[0]
            self.last_six_element = self.last_six_element[1:]
            self.last_six_element.append(element)
        else:
            self.last_six_element.append(element)
    
    def get_max(self):
        return self.max_element


if __name__ == '__main__':

    sequence = BigSequence()
    while True:
        number = int(input())
        if number == 0:
            break
        else:
            sequence.add_element(number)

    print(sequence.get_max())
